diff --git a/config.def.h b/config.def.h
index c446903..3646dd3 100644
--- a/config.def.h
+++ b/config.def.h
@@ -577,6 +577,9 @@ static char ascii_printable[] =
 // <<<<<<<<<<<<<<<<<<<< vim-browse
 
 // >>>>>>>>>>>>>>>>>>>> sync
-// ==================== sync
-// ==================== sync
+/*
+ * Synchronized-Update timeout in ms
+ * https://gitlab.com/gnachman/iterm2/-/wikis/synchronized-updates-spec
+ */
+static uint su_timeout = 200;
 // <<<<<<<<<<<<<<<<<<<< sync
diff --git a/st.c b/st.c
index 8dd11a5..e2e163c 100644
--- a/st.c
+++ b/st.c
@@ -274,8 +274,28 @@ static Rune utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};
 // <<<<<<<<<<<<<<<<<<<< vim-browse
 
 // >>>>>>>>>>>>>>>>>>>> sync
-// ==================== sync
-// ==================== sync
+#ifndef TIME
+#define TIME
+#include <time.h>
+#endif
+
+static int su = 0;
+struct timespec sutv;
+
+static void tsync_begin() {
+  clock_gettime(CLOCK_MONOTONIC, &sutv);
+  su = 1;
+}
+
+static void tsync_end() { su = 0; }
+
+int tinsync(uint timeout) {
+  struct timespec now;
+  if (su && !clock_gettime(CLOCK_MONOTONIC, &now) &&
+      TIMEDIFF(now, sutv) >= timeout)
+    su = 0;
+  return su;
+}
 // <<<<<<<<<<<<<<<<<<<< sync
 
 ssize_t xwrite(int fd, const char *s, size_t len) {
@@ -891,8 +911,8 @@ int ttynew(char *line, char *cmd, char *out, char **args) {
 }
 
 // >>>>>>>>>>>>>>>>>>>> sync
-// ==================== sync
-// ==================== sync
+static int twrite_aborted = 0;
+int ttyread_pending() { return twrite_aborted; }
 // <<<<<<<<<<<<<<<<<<<< sync
 
 size_t ttyread(void) {
@@ -902,9 +922,7 @@ size_t ttyread(void) {
 
   /* append read bytes to unprocessed bytes */
   // >>>>>>>>>>>>>>>>>>>> sync
-  // ==================== sync
-  ret = read(cmdfd, buf + buflen, LEN(buf) - buflen);
-  // ==================== sync
+  ret = twrite_aborted ? 1 : read(cmdfd, buf+buflen, LEN(buf)-buflen);
   // <<<<<<<<<<<<<<<<<<<< sync
 
   switch (ret) {
@@ -914,9 +932,7 @@ size_t ttyread(void) {
     die("couldn't read from shell: %s\n", strerror(errno));
   default:
     // >>>>>>>>>>>>>>>>>>>> sync
-    // ==================== sync
-    buflen += ret;
-    // ==================== sync
+    buflen += twrite_aborted ? 0 : ret;
     // <<<<<<<<<<<<<<<<<<<< sync
     written = twrite(buf, buflen, 0);
     buflen -= written;
@@ -1062,8 +1078,7 @@ void tsetdirtattr(int attr) {
 
 void tfulldirt(void) {
   // >>>>>>>>>>>>>>>>>>>> sync
-  // ==================== sync
-  // ==================== sync
+  tsync_end();
   // <<<<<<<<<<<<<<<<<<<< sync
   tsetdirt(0, term.row - 1);
 }
@@ -1919,8 +1934,12 @@ void strhandle(void) {
     return;
   case 'P': /* DCS -- Device Control String */
   // >>>>>>>>>>>>>>>>>>>> sync
-  // ==================== sync
-  // ==================== sync
+    /* https://gitlab.com/gnachman/iterm2/-/wikis/synchronized-updates-spec */
+    if (strstr(strescseq.buf, "=1s") == strescseq.buf)
+      tsync_begin();  /* BSU */
+    else if (strstr(strescseq.buf, "=2s") == strescseq.buf)
+      tsync_end();  /* ESU */
+    return;
   // <<<<<<<<<<<<<<<<<<<< sync
   case '_': /* APC -- Application Program Command */
   case '^': /* PM -- Privacy Message */
@@ -2420,8 +2439,8 @@ int twrite(const char *buf, int buflen, int show_ctrl) {
   int n;
 
   // >>>>>>>>>>>>>>>>>>>> sync
-  // ==================== sync
-  // ==================== sync
+	int su0 = su;
+	twrite_aborted = 0;
   // <<<<<<<<<<<<<<<<<<<< sync
 
   for (n = 0; n < buflen; n += charsize) {
@@ -2435,8 +2454,10 @@ int twrite(const char *buf, int buflen, int show_ctrl) {
       charsize = 1;
     }
     // >>>>>>>>>>>>>>>>>>>> sync
-    // ==================== sync
-    // ==================== sync
+    if (su0 && !su) {
+      twrite_aborted = 1;
+      break; // ESU - allow rendering before a new BSU
+    }
     // <<<<<<<<<<<<<<<<<<<< sync
     if (show_ctrl && ISCONTROL(u)) {
       if (u & 0x80) {
diff --git a/st.info b/st.info
index dde2505..579daa9 100644
--- a/st.info
+++ b/st.info
@@ -191,6 +191,7 @@ st-mono| simpleterm monocolor,
   Ms=\E]52;%p1%s;%p2%s\007,
   Se=\E[2 q,
   Ss=\E[%p1%d q,
+  Sync=\EP=%p1%ds\E\\,
 
 st| simpleterm,
   use=st-mono,
diff --git a/x.c b/x.c
index e0ebaba..e3f1f33 100644
--- a/x.c
+++ b/x.c
@@ -2155,8 +2155,8 @@ void resize(XEvent *e) {
 }
 
 // >>>>>>>>>>>>>>>>>>>> sync
-// ==================== sync
-// ==================== sync
+int tinsync(uint);
+int ttyread_pending();
 // <<<<<<<<<<<<<<<<<<<< sync
 
 void run(void) {
@@ -2192,9 +2192,7 @@ void run(void) {
     FD_SET(xfd, &rfd);
 
     // >>>>>>>>>>>>>>>>>>>> sync
-    // ==================== sync
-    if (XPending(xw.dpy))
-    // ==================== sync
+    if (XPending(xw.dpy) || ttyread_pending())
     // <<<<<<<<<<<<<<<<<<<< sync
       timeout = 0; /* existing events might not set xfd */
 
@@ -2210,9 +2208,8 @@ void run(void) {
     clock_gettime(CLOCK_MONOTONIC, &now);
 
     // >>>>>>>>>>>>>>>>>>>> sync
-    // ==================== sync
-    if (FD_ISSET(ttyfd, &rfd))
-    // ==================== sync
+    int ttyin = FD_ISSET(ttyfd, &rfd) || ttyread_pending();
+    if (ttyin)
     // <<<<<<<<<<<<<<<<<<<< sync
       ttyread();
 
@@ -2238,9 +2235,7 @@ void run(void) {
      * sync with periodic updates from animations/key-repeats/etc.
      */
     // >>>>>>>>>>>>>>>>>>>> sync
-    // ==================== sync
-    if (FD_ISSET(ttyfd, &rfd) || xev) {
-    // ==================== sync
+    if (ttyin || xev) {
     // <<<<<<<<<<<<<<<<<<<< sync
       if (!drawing) {
         trigger = now;
@@ -2258,8 +2253,17 @@ void run(void) {
     }
 
     // >>>>>>>>>>>>>>>>>>>> sync
-    // ==================== sync
-    // ==================== sync
+    if (tinsync(su_timeout)) {
+      /*
+       * on synchronized-update draw-suspension: don't reset
+       * drawing so that we draw ASAP once we can (just after
+       * ESU). it won't be too soon because we already can
+       * draw now but we skip. we set timeout > 0 to draw on
+       * SU-timeout even without new content.
+       */
+      timeout = minlatency;
+      continue;
+    }
     // <<<<<<<<<<<<<<<<<<<< sync
 
     /* idle detected or maxlatency exhausted -> draw */
