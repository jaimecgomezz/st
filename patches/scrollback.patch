diff --git a/config.def.h b/config.def.h
index de66a85..60a36c9 100644
--- a/config.def.h
+++ b/config.def.h
@@ -262,8 +262,8 @@ static Shortcut shortcuts[] = {
   // ==================== keyboard-select
   // <<<<<<<<<<<<<<<<<<<< keyboard-select
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  // ==================== scrollback
+  { ShiftMask,            XK_Page_Up,     kscrollup,      {.i = -1} },
+  { ShiftMask,            XK_Page_Down,   kscrolldown,    {.i = -1} },
   // <<<<<<<<<<<<<<<<<<<< scrollback
 };
 
diff --git a/st.c b/st.c
index 17a4c48..b39c889 100644
--- a/st.c
+++ b/st.c
@@ -44,8 +44,9 @@
 #define STR_BUF_SIZ   ESC_BUF_SIZ
 #define STR_ARG_SIZ   ESC_ARG_SIZ
 // >>>>>>>>>>>>>>>>>>>> scrollback
-// ==================== scrollback
-// ==================== scrollback
+#ifndef HISTSIZE
+#define HISTSIZE      2000
+#endif
 // <<<<<<<<<<<<<<<<<<<< scrollback
 
 /* macros */
@@ -55,8 +56,12 @@
 #define ISCONTROL(c)    (ISCONTROLC0(c) || ISCONTROLC1(c))
 #define ISDELIM(u)    (u && wcschr(worddelimiters, u))
 // >>>>>>>>>>>>>>>>>>>> scrollback
-// ==================== scrollback
-// ==================== scrollback
+#ifndef TLINE
+#define TLINE(y)                                                               \
+  ((y) < term.scr                                                              \
+       ? term.hist[((y) + term.histi - term.scr + HISTSIZE + 1) % HISTSIZE]    \
+       : term.line[(y)-term.scr])
+#endif
 // <<<<<<<<<<<<<<<<<<<< scrollback
 
 // >>>>>>>>>>>>>>>>>>>> vim-browse
@@ -154,8 +159,9 @@ typedef struct {
   int *tabs;
   Rune lastc;   /* last printed char outside of sequence, 0 if control */
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  // ==================== scrollback
+  Line hist[HISTSIZE]; /* history buffer */
+  int histi;    /* history index */
+  int scr;      /* scroll back */
   // <<<<<<<<<<<<<<<<<<<< scrollback
 } Term;
 
@@ -214,10 +220,8 @@ static void tputtab(int);
 static void tputc(Rune);
 static void treset(void);
 // >>>>>>>>>>>>>>>>>>>> scrollback
-// ==================== scrollback
-static void tscrollup(int, int);
-static void tscrolldown(int, int);
-// ==================== scrollback
+static void tscrollup(int, int, int);
+static void tscrolldown(int, int, int);
 // <<<<<<<<<<<<<<<<<<<< scrollback
 static void tsetattr(int *, int);
 static void tsetchar(Rune, Glyph *, int, int);
@@ -451,16 +455,12 @@ int tlinelen(int y) {
   int i = term.col;
 
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  if (term.line[y][i - 1].mode & ATTR_WRAP)
-  // ==================== scrollback
+  if (TLINE(y)[i - 1].mode & ATTR_WRAP)
   // <<<<<<<<<<<<<<<<<<<< scrollback
     return i;
 
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  while (i > 0 && term.line[y][i - 1].u == ' ')
-  // ==================== scrollback
+  while (i > 0 && TLINE(y)[i - 1].u == ' ')
   // <<<<<<<<<<<<<<<<<<<< scrollback
     --i;
 
@@ -599,9 +599,7 @@ void selsnap(int *x, int *y, int direction) {
      * beginning of a line.
      */
     // >>>>>>>>>>>>>>>>>>>> scrollback
-    // ==================== scrollback
-    prevgp = &term.line[*y][*x];
-    // ==================== scrollback
+    prevgp = &TLINE(*y)[*x];
     // <<<<<<<<<<<<<<<<<<<< scrollback
     prevdelim = ISDELIM(prevgp->u);
     for (;;) {
@@ -618,9 +616,7 @@ void selsnap(int *x, int *y, int direction) {
         else
           yt = newy, xt = newx;
         // >>>>>>>>>>>>>>>>>>>> scrollback
-        // ==================== scrollback
-        if (!(term.line[yt][xt].mode & ATTR_WRAP))
-        // ==================== scrollback
+        if (!(TLINE(yt)[xt].mode & ATTR_WRAP))
         // <<<<<<<<<<<<<<<<<<<< scrollback
           break;
       }
@@ -629,9 +625,7 @@ void selsnap(int *x, int *y, int direction) {
         break;
 
       // >>>>>>>>>>>>>>>>>>>> scrollback
-      // ==================== scrollback
-      gp = &term.line[newy][newx];
-      // ==================== scrollback
+      gp = &TLINE(newy)[newx];
       // <<<<<<<<<<<<<<<<<<<< scrollback
       delim = ISDELIM(gp->u);
       if (!(gp->mode & ATTR_WDUMMY) &&
@@ -654,9 +648,7 @@ void selsnap(int *x, int *y, int direction) {
     if (direction < 0) {
       for (; *y > 0; *y += direction) {
         // >>>>>>>>>>>>>>>>>>>> scrollback
-        // ==================== scrollback
-        if (!(term.line[*y - 1][term.col - 1].mode & ATTR_WRAP)) {
-        // ==================== scrollback
+        if (!(TLINE(*y-1)[term.col-1].mode & ATTR_WRAP)) {
         // <<<<<<<<<<<<<<<<<<<< scrollback
           break;
         }
@@ -664,9 +656,7 @@ void selsnap(int *x, int *y, int direction) {
     } else if (direction > 0) {
       for (; *y < term.row - 1; *y += direction) {
         // >>>>>>>>>>>>>>>>>>>> scrollback
-        // ==================== scrollback
-        if (!(term.line[*y][term.col - 1].mode & ATTR_WRAP)) {
-        // ==================== scrollback
+        if (!(TLINE(*y)[term.col-1].mode & ATTR_WRAP)) {
         // <<<<<<<<<<<<<<<<<<<< scrollback
           break;
         }
@@ -710,25 +700,19 @@ char *getsel(void) {
 
     if (sel.type == SEL_RECTANGULAR) {
       // >>>>>>>>>>>>>>>>>>>> vim-browse-scrollback
-      // ==================== vim-browse-scrollback
-      gp = &term.line[y][sel.nb.x];
-      // ==================== vim-browse-scrollback
+      gp = &TLINE(y)[sel.nb.x];
       // <<<<<<<<<<<<<<<<<<<< vim-browse-scrollback
       lastx = sel.ne.x;
     } else {
       // >>>>>>>>>>>>>>>>>>>> vim-browse-scrollback
-      // ==================== vim-browse-scrollback
-      gp = &term.line[y][sel.nb.y == y ? sel.nb.x : 0];
+      gp = &TLINE(y)[sel.nb.y == y ? sel.nb.x : 0];
       lastx = (sel.ne.y == y) ? sel.ne.x : term.col - 1;
-      // ==================== vim-browse-scrollback
       // <<<<<<<<<<<<<<<<<<<< vim-browse-scrollback
     }
     // >>>>>>>>>>>>>>>>>>>> vim-browse-scrollback
-    // ==================== vim-browse-scrollback
-    last = &term.line[y][MIN(lastx, linelen - 1)];
+    last = &TLINE(y)[MIN(lastx, linelen-1)];
     while (last >= gp && last->u == ' ')
       --last;
-    // ==================== vim-browse-scrollback
     // <<<<<<<<<<<<<<<<<<<< vim-browse-scrollback
 
     for (; gp <= last; ++gp) {
@@ -974,8 +958,9 @@ size_t ttyread(void) {
 void ttywrite(const char *s, size_t n, int may_echo) {
   const char *next;
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  // ==================== scrollback
+  Arg arg = (Arg) { .i = term.scr };
+
+  kscrolldown(&arg);
   // <<<<<<<<<<<<<<<<<<<< scrollback
 
   if (may_echo && IS_SET(MODE_ECHO))
@@ -1173,14 +1158,38 @@ void tswapscreen(void) {
 }
 
 // >>>>>>>>>>>>>>>>>>>> scrollback
-// ==================== scrollback
-// ==================== scrollback
+void kscrolldown(const Arg *a) {
+  int n = a->i;
+
+  if (n < 0)
+    n = term.row + n;
+
+  if (n > term.scr)
+    n = term.scr;
+
+  if (term.scr > 0) {
+    term.scr -= n;
+    selscroll(0, -n);
+    tfulldirt();
+  }
+}
+
+void kscrollup(const Arg *a) {
+  int n = a->i;
+
+  if (n < 0)
+    n = term.row + n;
+
+  if (term.scr <= HISTSIZE - n) {
+    term.scr += n;
+    selscroll(0, n);
+    tfulldirt();
+  }
+}
 // <<<<<<<<<<<<<<<<<<<< scrollback
 
 // >>>>>>>>>>>>>>>>>>>> scrollback
-// ==================== scrollback
-void tscrolldown(int orig, int n) {
-// ==================== scrollback
+void tscrolldown(int orig, int n, int copyhist) {
 // <<<<<<<<<<<<<<<<<<<< scrollback
   // >>>>>>>>>>>>>>>>>>>> vim-browse
   // ==================== vim-browse
@@ -1192,8 +1201,12 @@ void tscrolldown(int orig, int n) {
   LIMIT(n, 0, term.bot - orig + 1);
 
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  // ==================== scrollback
+  if (copyhist) {
+    term.histi = (term.histi - 1 + HISTSIZE) % HISTSIZE;
+    temp = term.hist[term.histi];
+    term.hist[term.histi] = term.line[term.bot];
+    term.line[term.bot] = temp;
+  }
   // <<<<<<<<<<<<<<<<<<<< scrollback
 
   tsetdirt(orig, term.bot - n);
@@ -1206,16 +1219,13 @@ void tscrolldown(int orig, int n) {
   }
 
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  selscroll(orig, n);
-  // ==================== scrollback
+  if (term.scr == 0)
+    selscroll(orig, n);
   // <<<<<<<<<<<<<<<<<<<< scrollback
 }
 
 // >>>>>>>>>>>>>>>>>>>> scrollback
-// ==================== scrollback
-void tscrollup(int orig, int n) {
-// ==================== scrollback
+void tscrollup(int orig, int n, int copyhist) {
 // <<<<<<<<<<<<<<<<<<<< scrollback
   // >>>>>>>>>>>>>>>>>>>> vim-browse
   // ==================== vim-browse
@@ -1227,8 +1237,15 @@ void tscrollup(int orig, int n) {
   LIMIT(n, 0, term.bot - orig + 1);
 
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  // ==================== scrollback
+  if (copyhist) {
+    term.histi = (term.histi + 1) % HISTSIZE;
+    temp = term.hist[term.histi];
+    term.hist[term.histi] = term.line[orig];
+    term.line[orig] = temp;
+  }
+
+  if (term.scr > 0 && term.scr < HISTSIZE)
+    term.scr = MIN(term.scr + n, HISTSIZE - 1);
   // <<<<<<<<<<<<<<<<<<<< scrollback
 
   tclearregion(0, orig, term.col - 1, orig + n - 1);
@@ -1241,9 +1258,8 @@ void tscrollup(int orig, int n) {
   }
 
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  selscroll(orig, -n);
-  // ==================== scrollback
+  if (term.scr == 0)
+    selscroll(orig, -n);
   // <<<<<<<<<<<<<<<<<<<< scrollback
 }
 
@@ -1270,9 +1286,7 @@ void tnewline(int first_col) {
 
   if (y == term.bot) {
     // >>>>>>>>>>>>>>>>>>>> scrollback
-    // ==================== scrollback
-    tscrollup(term.top, 1);
-    // ==================== scrollback
+    tscrollup(term.top, 1, 1);
     // <<<<<<<<<<<<<<<<<<<< scrollback
   } else {
     y++;
@@ -1432,18 +1446,14 @@ void tinsertblank(int n) {
 void tinsertblankline(int n) {
   if (BETWEEN(term.c.y, term.top, term.bot))
     // >>>>>>>>>>>>>>>>>>>> scrollback
-    // ==================== scrollback
-    tscrolldown(term.c.y, n);
-    // ==================== scrollback
+    tscrolldown(term.c.y, n, 0);
     // <<<<<<<<<<<<<<<<<<<< scrollback
 }
 
 void tdeleteline(int n) {
   if (BETWEEN(term.c.y, term.top, term.bot))
     // >>>>>>>>>>>>>>>>>>>> scrollback
-    // ==================== scrollback
-    tscrollup(term.c.y, n);
-    // ==================== scrollback
+    tscrollup(term.c.y, n, 0);
     // <<<<<<<<<<<<<<<<<<<< scrollback
 }
 
@@ -1853,17 +1863,13 @@ void csihandle(void) {
   case 'S': /* SU -- Scroll <n> line up */
     DEFAULT(csiescseq.arg[0], 1);
     // >>>>>>>>>>>>>>>>>>>> scrollback
-    // ==================== scrollback
-    tscrollup(term.top, csiescseq.arg[0]);
-    // ==================== scrollback
+    tscrollup(term.top, csiescseq.arg[0], 0);
     // <<<<<<<<<<<<<<<<<<<< scrollback
     break;
   case 'T': /* SD -- Scroll <n> line down */
     DEFAULT(csiescseq.arg[0], 1);
     // >>>>>>>>>>>>>>>>>>>> scrollback
-    // ==================== scrollback
-    tscrolldown(term.top, csiescseq.arg[0]);
-    // ==================== scrollback
+    tscrolldown(term.top, csiescseq.arg[0], 0);
     // <<<<<<<<<<<<<<<<<<<< scrollback
     break;
   case 'L': /* IL -- Insert <n> blank lines */
@@ -2326,9 +2332,7 @@ int eschandle(uchar ascii) {
   case 'D': /* IND -- Linefeed */
     if (term.c.y == term.bot) {
       // >>>>>>>>>>>>>>>>>>>> scrollback
-      // ==================== scrollback
-      tscrollup(term.top, 1);
-      // ==================== scrollback
+      tscrollup(term.top, 1, 1);
       // <<<<<<<<<<<<<<<<<<<< scrollback
     } else {
       tmoveto(term.c.x, term.c.y + 1);
@@ -2343,9 +2347,7 @@ int eschandle(uchar ascii) {
   case 'M': /* RI -- Reverse index */
     if (term.c.y == term.top) {
     // >>>>>>>>>>>>>>>>>>>> scrollback
-    // ==================== scrollback
-      tscrolldown(term.top, 1);
-    // ==================== scrollback
+      tscrolldown(term.top, 1, 1);
     // <<<<<<<<<<<<<<<<<<<< scrollback
     } else {
       tmoveto(term.c.x, term.c.y - 1);
@@ -2571,8 +2573,7 @@ void tresize(int col, int row) {
   int *bp;
   TCursor c;
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  // ==================== scrollback
+  int j;
   // <<<<<<<<<<<<<<<<<<<< scrollback
 
   // >>>>>>>>>>>>>>>>>>>> keyboard-select
@@ -2632,8 +2633,13 @@ void tresize(int col, int row) {
   term.tabs = xrealloc(term.tabs, col * sizeof(*term.tabs));
 
   // >>>>>>>>>>>>>>>>>>>> scrollback
-  // ==================== scrollback
-  // ==================== scrollback
+  for (i = 0; i < HISTSIZE; i++) {
+    term.hist[i] = xrealloc(term.hist[i], col * sizeof(Glyph));
+    for (j = mincol; j < col; j++) {
+      term.hist[i][j] = term.c.attr;
+      term.hist[i][j].u = ' ';
+    }
+  }
   // <<<<<<<<<<<<<<<<<<<< scrollback
 
   /* resize each row to new width, zero-pad if needed */
@@ -2717,13 +2723,11 @@ void drawregion(int x1, int y1, int x2, int y2) {
 
   for (y = y1; y < y2; y++) {
     // >>>>>>>>>>>>>>>>>>>> vim-browse-scrollback
-    // ==================== vim-browse-scrollback
     if (!term.dirty[y])
       continue;
 
     term.dirty[y] = 0;
-    xdrawline(term.line[y], x1, y, x2);
-    // ==================== vim-browse-scrollback
+    xdrawline(TLINE(y), x1, y, x2);
     // <<<<<<<<<<<<<<<<<<<< vim-browse-scrollback
   }
 
@@ -2753,7 +2757,6 @@ void draw(void) {
   // ==================== vim-browse
   // <<<<<<<<<<<<<<<<<<<< vim-browse
   // >>>>>>>>>>>>>>>>>>>> ligatures-scrollback
-  // ==================== ligatures-scrollback
   xdrawcursor(
     cx,
     term.c.y,
@@ -2762,7 +2765,6 @@ void draw(void) {
     term.ocy,
     term.line[term.ocy][term.ocx]
   );
-  // ==================== ligatures-scrollback
   // <<<<<<<<<<<<<<<<<<<< ligatures-scrollback
 
   term.ocx = cx;
diff --git a/st.h b/st.h
index 07a228d..4815b62 100644
--- a/st.h
+++ b/st.h
@@ -181,6 +181,6 @@ extern unsigned int defaultbg;
 // <<<<<<<<<<<<<<<<<<<< keyboard-select
 
 // >>>>>>>>>>>>>>>>>>>> scrollback
-// ==================== scrollback
-// ==================== scrollback
+void kscrolldown(const Arg *);
+void kscrollup(const Arg *);
 // <<<<<<<<<<<<<<<<<<<< scrollback
